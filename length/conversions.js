// Generated by CoffeeScript 2.7.0
/* Length Conversions */

var cm$dam, cm$dm, cm$foot, cm$hm, cm$inch, cm$km, cm$m, cm$mile, cm$mm, cm$nm, cm$um, cm$yard, convertLength, dam$cm, dam$dm, dam$foot, dam$hm, dam$inch, dam$km, dam$m, dam$mile, dam$mm, dam$nm, dam$um, dam$yard, dm$cm, dm$dam, dm$foot, dm$hm, dm$inch, dm$km, dm$m, dm$mile, dm$mm, dm$nm, dm$um, dm$yard, foot$cm, foot$dam, foot$dm, foot$hm, foot$inch, foot$km, foot$m, foot$mile, foot$mm, foot$nm, foot$um, foot$yard, hm$cm, hm$dam, hm$dm, hm$foot, hm$inch, hm$km, hm$m, hm$mile, hm$mm, hm$nm, hm$um, hm$yard, inch$cm, inch$dam, inch$dm, inch$foot, inch$hm, inch$km, inch$m, inch$mile, inch$mm, inch$nm, inch$um, inch$yard, km$cm, km$dam, km$dm, km$foot, km$hm, km$inch, km$m, km$mile, km$mm, km$nm, km$um, km$yard, m$cm, m$dam, m$dm, m$foot, m$hm, m$inch, m$km, m$mile, m$mm, m$nm, m$um, m$yard, mile$cm, mile$dam, mile$dm, mile$foot, mile$hm, mile$inch, mile$km, mile$m, mile$mm, mile$nm, mile$um, mile$yard, mm$cm, mm$dam, mm$dm, mm$foot, mm$hm, mm$inch, mm$km, mm$m, mm$mile, mm$nm, mm$um, mm$yard, nm$cm, nm$dam, nm$dm, nm$foot, nm$hm, nm$inch, nm$km, nm$m, nm$mile, nm$mm, nm$um, nm$yard, um$cm, um$dam, um$dm, um$foot, um$hm, um$inch, um$km, um$m, um$mile, um$mm, um$nm, um$yard, yard$cm, yard$dam, yard$dm, yard$foot, yard$hm, yard$inch, yard$km, yard$m, yard$mile, yard$mm, yard$nm, yard$um;

convertLength = {
  nanometer: {},
  micrometer: {},
  millimeter: {},
  centimeter: {},
  decimeter: {},
  meter: {},
  decameter: {},
  hectometer: {},
  kilometer: {},
  inch: {},
  foot: {},
  yard: {},
  mile: {}
};

/* Nanometer Conversions */
convertLength.nanometer.micrometer = nm$um = function(nm) {
  return nm / 1e+3; // Nanometer to Micrometer
};

convertLength.nanometer.millimeter = nm$mm = function(nm) {
  return nm / 1e+6; // Nanometer to Millimeter
};

convertLength.nanometer.centimeter = nm$cm = function(nm) {
  return nm / 1e+7; // Nanometer to Centimeter
};

convertLength.nanometer.decimeter = nm$dm = function(nm) {
  return nm / 1e+8; // Nanometer to Decimeter
};

convertLength.nanometer.meter = nm$m = function(nm) {
  return nm / 1e+9; // Nanometer to Meter
};

convertLength.nanometer.decameter = nm$dam = function(nm) {
  return nm / 1e+10; // Nanometer to Decameter
};

convertLength.nanometer.hectometer = nm$hm = function(nm) {
  return nm / 1e+11; // Nanometer to Hectometer
};

convertLength.nanometer.kilometer = nm$km = function(nm) {
  return nm / 1e+12; // Nanometer to Kilometer
};

convertLength.nanometer.inch = nm$inch = function(nm) {
  return nm / 254e+5; // Nanometer to Inch
};

convertLength.nanometer.foot = nm$foot = function(nm) {
  return nm / 3048e+5; // Nanometer to Foot
};

convertLength.nanometer.yard = nm$yard = function(nm) {
  return nm / 9144e+5; // Nanometer to Yard
};

convertLength.nanometer.mile = nm$mile = function(nm) {
  return nm / 1609e+9; // Nanometer to Mile
};

/* Micrometer Conversions */
convertLength.micrometer.nanometer = um$nm = function(um) {
  return um * 1e+3; // Micrometer to Nanometer
};

convertLength.micrometer.millimeter = um$mm = function(um) {
  return um / 1e+3; // Micrometer to Millimeter
};

convertLength.micrometer.centimeter = um$cm = function(um) {
  return um / 1e+4; // Micrometer to Centimeter
};

convertLength.micrometer.decimeter = um$dm = function(um) {
  return um / 1e+5; // Micrometer to Decimeter
};

convertLength.micrometer.meter = um$m = function(um) {
  return um / 1e+6; // Micrometer to Meter
};

convertLength.micrometer.decameter = um$dam = function(um) {
  return um / 1e+7; // Micrometer to Decameter
};

convertLength.micrometer.hectometer = um$hm = function(um) {
  return um / 1e+8; // Micrometer to Hectometer
};

convertLength.micrometer.kilometer = um$km = function(um) {
  return um / 1e+9; // Micrometer to Kilometer
};

convertLength.micrometer.inch = um$inch = function(um) {
  return um / 254e+2; // Micrometer to Inch
};

convertLength.micrometer.foot = um$foot = function(um) {
  return um / 3048e+2; // Micrometer to Foot
};

convertLength.micrometer.yard = um$yard = function(um) {
  return um / 9144e+2; // Micrometer to Yard
};

convertLength.micrometer.mile = um$mile = function(um) {
  return um / 1609e+6; // Micrometer to Mile
};

/* Millimeter Conversions */
convertLength.millimeter.nanometer = mm$nm = function(mm) {
  return mm * 1e+6; // Millimeter to Nanometer
};

convertLength.millimeter.micrometer = mm$um = function(mm) {
  return mm * 1e+3; // Millimeter to Micrometer
};

convertLength.millimeter.centimeter = mm$cm = function(mm) {
  return mm / 1e+1; // Millimeter to Centimeter
};

convertLength.millimeter.decimeter = mm$dm = function(mm) {
  return mm / 1e+2; // Millimeter to Decimeter
};

convertLength.millimeter.meter = mm$m = function(mm) {
  return mm / 1e+3; // Millimeter to Meter
};

convertLength.millimeter.decameter = mm$dam = function(mm) {
  return mm / 1e+4; // Millimeter to Decameter
};

convertLength.millimeter.hectometer = mm$hm = function(mm) {
  return mm / 1e+5; // Millimeter to Hectometer
};

convertLength.millimeter.kilometer = mm$km = function(mm) {
  return mm / 1e+6; // Millimeter to Kilometer
};

convertLength.millimeter.inch = mm$inch = function(mm) {
  return mm / 25.4; // Millimeter to Inch
};

convertLength.millimeter.foot = mm$foot = function(mm) {
  return mm / 304.8; // Millimeter to Foot
};

convertLength.millimeter.yard = mm$yard = function(mm) {
  return mm / 914.4; // Millimeter to Yard
};

convertLength.millimeter.mile = mm$mile = function(mm) {
  return mm / 1609e+3; // Millimeter to Mile
};

/* Centimeter Conversions */
convertLength.centimeter.nanometer = cm$nm = function(cm) {
  return cm * 1e+7; // Centimeter to Nanometer
};

convertLength.centimeter.micrometer = cm$um = function(cm) {
  return cm * 1e+4; // Centimeter to Micrometer
};

convertLength.centimeter.millimeter = cm$mm = function(cm) {
  return cm * 1e+1; // Centimeter to Millimeter
};

convertLength.centimeter.decimeter = cm$dm = function(cm) {
  return cm / 1e+1; // Centimeter to Decimeter
};

convertLength.centimeter.meter = cm$m = function(cm) {
  return cm / 1e+2; // Centimeter to Meter
};

convertLength.centimeter.decameter = cm$dam = function(cm) {
  return cm / 1e+3; // Centimeter to Decameter
};

convertLength.centimeter.hectometer = cm$hm = function(cm) {
  return cm / 1e+4; // Centimeter to Hectometer
};

convertLength.centimeter.kilometer = cm$km = function(cm) {
  return cm / 1e+5; // Centimeter to Kilometer
};

convertLength.centimeter.inch = cm$inch = function(cm) {
  return cm / 2.54; // Centimeter to Inch
};

convertLength.centimeter.foot = cm$foot = function(cm) {
  return cm / 30.48; // Centimeter to Foot
};

convertLength.centimeter.yard = cm$yard = function(cm) {
  return cm / 91.44; // Centimeter to Yard
};

convertLength.centimeter.mile = cm$mile = function(cm) {
  return cm / 1609e+2; // Centimeter to Mile
};

/* Decimeter Conversions */
convertLength.decimeter.nanometer = dm$nm = function(dm) {
  return dm * 1e+8; // Decimeter to Nanometer
};

convertLength.decimeter.micrometer = dm$um = function(dm) {
  return dm * 1e+5; // Decimeter to Micrometer
};

convertLength.decimeter.millimeter = dm$mm = function(dm) {
  return dm * 1e+2; // Decimeter to Millimeter
};

convertLength.decimeter.centimeter = dm$cm = function(dm) {
  return dm * 1e+1; // Decimeter to Centimeter
};

convertLength.decimeter.meter = dm$m = function(dm) {
  return dm / 1e+1; // Decimeter to Meter
};

convertLength.decimeter.decameter = dm$dam = function(dm) {
  return dm / 1e+2; // Decimeter to Decameter
};

convertLength.decimeter.hectometer = dm$hm = function(dm) {
  return dm / 1e+3; // Decimeter to Hectometer
};

convertLength.decimeter.kilometer = dm$km = function(dm) {
  return dm / 1e+4; // Decimeter to Kilometer
};

convertLength.decimeter.inch = dm$inch = function(dm) {
  return dm * 3.937; // Decimeter to Inch
};

convertLength.decimeter.foot = dm$foot = function(dm) {
  return dm / 3.048; // Decimeter to Foot
};

convertLength.decimeter.yard = dm$yard = function(dm) {
  return dm / 9.144; // Decimeter to Yard
};

convertLength.decimeter.mile = dm$mile = function(dm) {
  return dm / 1609e+1; // Decimeter to Mile
};

/* Meter Conversions */
convertLength.meter.nanometer = m$nm = function(m) {
  return m * 1e+9; // Meter to Nanometer
};

convertLength.meter.micrometer = m$um = function(m) {
  return m * 1e+6; // Meter to Micrometer
};

convertLength.meter.millimeter = m$mm = function(m) {
  return m * 1e+3; // Meter to Millimeter
};

convertLength.meter.centimeter = m$cm = function(m) {
  return m * 1e+2; // Meter to Centimeter
};

convertLength.meter.decimeter = m$dm = function(m) {
  return m * 1e+1; // Meter to Decimeter
};

convertLength.meter.decameter = m$dam = function(m) {
  return m / 1e+1; // Meter to Decameter
};

convertLength.meter.hectometer = m$hm = function(m) {
  return m / 1e+2; // Meter to Hectometer
};

convertLength.meter.kilometer = m$km = function(m) {
  return m / 1e+3; // Meter to Kilometer
};

convertLength.meter.inch = m$inch = function(m) {
  return m * 39.37; // Meter to Inch
};

convertLength.meter.foot = m$foot = function(m) {
  return m * 3.281; // Meter to Foot
};

convertLength.meter.yard = m$yard = function(m) {
  return m * 1.094; // Meter to Yard
};

convertLength.meter.mile = m$mile = function(m) {
  return m / 1609; // Meter to Mile
};

/* Decameter Conversions */
convertLength.decameter.nanometer = dam$nm = function(dam) {
  return dam * 1e+10; // Decameter to Nanometer
};

convertLength.decameter.micrometer = dam$um = function(dam) {
  return dam * 1e+7; // Decameter to Micrometer
};

convertLength.decameter.millimeter = dam$mm = function(dam) {
  return dam * 1e+4; // Decameter to Millimeter
};

convertLength.decameter.centimeter = dam$cm = function(dam) {
  return dam * 1e+3; // Decameter to Centimeter
};

convertLength.decameter.decimeter = dam$dm = function(dam) {
  return dam * 1e+2; // Decameter to Decimeter
};

convertLength.decameter.meter = dam$m = function(dam) {
  return dam * 1e+1; // Decameter to Meter
};

convertLength.decameter.hectometer = dam$hm = function(dam) {
  return dam / 1e+1; // Decameter to Hectometer
};

convertLength.decameter.kilometer = dam$km = function(dam) {
  return dam / 1e+2; // Decameter to Kilometer
};

convertLength.decameter.inch = dam$inch = function(dam) {
  return dam * 393.7; // Decameter to Inch
};

convertLength.decameter.foot = dam$foot = function(dam) {
  return dam * 32.81; // Decameter to Foot
};

convertLength.decameter.yard = dam$yard = function(dam) {
  return dam * 10.94; // Decameter to Yard
};

convertLength.decameter.mile = dam$mile = function(dam) {
  return dam / 160.9; // Decameter to Mile
};

/* Hectometer Conversions */
convertLength.hectometer.nanometer = hm$nm = function(hm) {
  return hm * 1e+11; // Hectometer to Nanometer
};

convertLength.hectometer.micrometer = hm$um = function(hm) {
  return hm * 1e+8; // Hectometer to Micrometer
};

convertLength.hectometer.millimeter = hm$mm = function(hm) {
  return hm * 1e+5; // Hectometer to Millimeter
};

convertLength.hectometer.centimeter = hm$cm = function(hm) {
  return hm * 1e+4; // Hectometer to Centimeter
};

convertLength.hectometer.decimeter = hm$dm = function(hm) {
  return hm * 1e+3; // Hectometer to Decimeter
};

convertLength.hectometer.meter = hm$m = function(hm) {
  return hm * 1e+2; // Hectometer to Meter
};

convertLength.hectometer.decameter = hm$dam = function(hm) {
  return hm * 1e+1; // Hectometer to Decameter
};

convertLength.hectometer.kilometer = hm$km = function(hm) {
  return hm / 1e+1; // Hectometer to Kilometer
};

convertLength.hectometer.inch = hm$inch = function(hm) {
  return hm * 3937; // Hectometer to Inch
};

convertLength.hectometer.foot = hm$foot = function(hm) {
  return hm * 328.1; // Hectometer to Foot
};

convertLength.hectometer.yard = hm$yard = function(hm) {
  return hm * 109.4; // Hectometer to Yard
};

convertLength.hectometer.mile = hm$mile = function(hm) {
  return hm / 16.09; // Hectometer to Mile
};

/* Kilometer Conversions */
convertLength.kilometer.nanometer = km$nm = function(km) {
  return km * 1e+12; // Kilometer to Nanometer
};

convertLength.kilometer.micrometer = km$um = function(km) {
  return km * 1e+9; // Kilometer to Micrometer
};

convertLength.kilometer.millimeter = km$mm = function(km) {
  return km * 1e+6; // Kilometer to Millimeter
};

convertLength.kilometer.centimeter = km$cm = function(km) {
  return km * 1e+5; // Kilometer to Centimeter
};

convertLength.kilometer.decimeter = km$dm = function(km) {
  return km * 1e+4; // Kilometer to Decimeter
};

convertLength.kilometer.meter = km$m = function(km) {
  return km * 1e+3; // Kilometer to Meter
};

convertLength.kilometer.decameter = km$dam = function(km) {
  return km * 1e+2; // Kilometer to Decameter
};

convertLength.kilometer.hectometer = km$hm = function(km) {
  return km * 1e+1; // Kilometer to Hectometer
};

convertLength.kilometer.inch = km$inch = function(km) {
  return km * 3937e+1; // Kilometer to Inch
};

convertLength.kilometer.foot = km$foot = function(km) {
  return km * 3281; // Kilometer to Foot
};

convertLength.kilometer.yard = km$yard = function(km) {
  return km * 1094; // Kilometer to Yard
};

convertLength.kilometer.mile = km$mile = function(km) {
  return km / 1.609; // Kilometer to Mile
};

/* Inch Conversions */
convertLength.inch.nanometer = inch$nm = function(inch) {
  return inch * 254e+5; // Inch to Nanometer
};

convertLength.inch.micrometer = inch$um = function(inch) {
  return inch * 254e+2; // Inch to Micrometer
};

convertLength.inch.millimeter = inch$mm = function(inch) {
  return inch * 25.4; // Inch to Millimeter
};

convertLength.inch.centimeter = inch$cm = function(inch) {
  return inch * 2.54; // Inch to Centimeter
};

convertLength.inch.decimeter = inch$dm = function(inch) {
  return inch / 3.937; // Inch to Decimeter
};

convertLength.inch.meter = inch$m = function(inch) {
  return inch / 39.37; // Inch to Meter
};

convertLength.inch.decameter = inch$dam = function(inch) {
  return inch / 393.7; // Inch to Decameter
};

convertLength.inch.hectometer = inch$hm = function(inch) {
  return inch / 3937; // Inch to Hectometer
};

convertLength.inch.kilometer = inch$km = function(inch) {
  return inch / 3937e+1; // Inch to Kilometer
};

convertLength.inch.foot = inch$foot = function(inch) {
  return inch / 12; // Inch to Foot
};

convertLength.inch.yard = inch$yard = function(inch) {
  return inch / 36; // Inch to Yard
};

convertLength.inch.mile = inch$mile = function(inch) {
  return inch / 63360; // Inch to Mile
};

/* Foot Conversions */
convertLength.foot.nanometer = foot$nm = function(foot) {
  return foot * 3048e+5; // Foot to Nanometer
};

convertLength.foot.micrometer = foot$um = function(foot) {
  return foot * 3048e+2; // Foot to Micrometer
};

convertLength.foot.millimeter = foot$mm = function(foot) {
  return foot * 304.8; // Foot to Millimeter
};

convertLength.foot.centimeter = foot$cm = function(foot) {
  return foot * 30.48; // Foot to Centimeter
};

convertLength.foot.decimeter = foot$dm = function(foot) {
  return foot * 3.048; // Foot to Decimeter
};

convertLength.foot.meter = foot$m = function(foot) {
  return foot / 3.281; // Foot to Meter
};

convertLength.foot.decameter = foot$dam = function(foot) {
  return foot / 32.81; // Foot to Decameter
};

convertLength.foot.hectometer = foot$hm = function(foot) {
  return foot / 328.1; // Foot to Hectometer
};

convertLength.foot.kilometer = foot$km = function(foot) {
  return foot / 3281; // Foot to Kilometer
};

convertLength.foot.inch = foot$inch = function(foot) {
  return foot * 12; // Foot to Inch
};

convertLength.foot.yard = foot$yard = function(foot) {
  return foot / 3; // Foot to Yard
};

convertLength.foot.mile = foot$mile = function(foot) {
  return foot / 5280; // Foot to Mile
};

/* Yard Conversions */
convertLength.yard.nanometer = yard$nm = function(yard) {
  return yard * 9144e+5; // Yard to Nanometer
};

convertLength.yard.micrometer = yard$um = function(yard) {
  return yard * 9144e+2; // Yard to Micrometer
};

convertLength.yard.millimeter = yard$mm = function(yard) {
  return yard * 914.4; // Yard to Millimeter
};

convertLength.yard.centimeter = yard$cm = function(yard) {
  return yard * 91.44; // Yard to Centimeter
};

convertLength.yard.decimeter = yard$dm = function(yard) {
  return yard * 9.144; // Yard to Decimeter
};

convertLength.yard.meter = yard$m = function(yard) {
  return yard / 1.094; // Yard to Meter
};

convertLength.yard.decameter = yard$dam = function(yard) {
  return yard / 10.94; // Yard to Decameter
};

convertLength.yard.hectometer = yard$hm = function(yard) {
  return yard / 109.4; // Yard to Hectometer
};

convertLength.yard.kilometer = yard$km = function(yard) {
  return yard / 1094; // Yard to Kilometer
};

convertLength.yard.inch = yard$inch = function(yard) {
  return yard * 36; // Yard to Inch
};

convertLength.yard.foot = yard$foot = function(yard) {
  return yard * 3; // Yard to Foot
};

convertLength.yard.mile = yard$mile = function(yard) {
  return yard / 1760; // Yard to Mile
};

/* Mile Conversions */
convertLength.mile.nanometer = mile$nm = function(mile) {
  return mile * 1609e+9; // Mile to Nanometer
};

convertLength.mile.micrometer = mile$um = function(mile) {
  return mile * 1609e+6; // Mile to Micrometer
};

convertLength.mile.millimeter = mile$mm = function(mile) {
  return mile * 1609e+3; // Mile to Millimeter
};

convertLength.mile.centimeter = mile$cm = function(mile) {
  return mile * 1609e+2; // Mile to Centimeter
};

convertLength.mile.decimeter = mile$dm = function(mile) {
  return mile * 1609e+1; // Mile to Decimeter
};

convertLength.mile.meter = mile$m = function(mile) {
  return mile * 1609; // Mile to Meter
};

convertLength.mile.decameter = mile$dam = function(mile) {
  return mile * 160.9; // Mile to Decameter
};

convertLength.mile.hectometer = mile$hm = function(mile) {
  return mile * 16.09; // Mile to Hectometer
};

convertLength.mile.kilometer = mile$km = function(mile) {
  return mile * 1.609; // Mile to Kilometer
};

convertLength.mile.inch = mile$inch = function(mile) {
  return mile * 63360; // Mile to Inch
};

convertLength.mile.foot = mile$foot = function(mile) {
  return mile * 5280; // Mile to Foot
};

convertLength.mile.yard = mile$yard = function(mile) {
  return mile * 1760; // Mile to Yard
};