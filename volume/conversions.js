// Generated by CoffeeScript 2.7.0
/* Volume Conversions */

var cmCu$damCu, cmCu$dmCu, cmCu$footCu, cmCu$hmCu, cmCu$inchCu, cmCu$kmCu, cmCu$mCu, cmCu$mileCu, cmCu$mmCu, cmCu$nmCu, cmCu$umCu, cmCu$yardCu, convertVolume, cup$gal, cup$l, cup$ml, cup$pt, cup$qt, cup$tbl, cup$tea, damCu$cmCu, damCu$dmCu, damCu$footCu, damCu$hmCu, damCu$inchCu, damCu$kmCu, damCu$mCu, damCu$mileCu, damCu$mmCu, damCu$nmCu, damCu$umCu, damCu$yardCu, dmCu$cmCu, dmCu$damCu, dmCu$footCu, dmCu$hmCu, dmCu$inchCu, dmCu$kmCu, dmCu$mCu, dmCu$mileCu, dmCu$mmCu, dmCu$nmCu, dmCu$umCu, dmCu$yardCu, footCu$cmCu, footCu$damCu, footCu$dmCu, footCu$hmCu, footCu$inchCu, footCu$kmCu, footCu$mCu, footCu$mileCu, footCu$mmCu, footCu$nmCu, footCu$umCu, footCu$yardCu, gal$cup, gal$l, gal$ml, gal$pt, gal$qt, gal$tbl, gal$tea, hmCu$cmCu, hmCu$damCu, hmCu$dmCu, hmCu$footCu, hmCu$inchCu, hmCu$kmCu, hmCu$mCu, hmCu$mileCu, hmCu$mmCu, hmCu$nmCu, hmCu$umCu, hmCu$yardCu, inchCu$cmCu, inchCu$damCu, inchCu$dmCu, inchCu$footCu, inchCu$hmCu, inchCu$kmCu, inchCu$mCu, inchCu$mileCu, inchCu$mmCu, inchCu$nmCu, inchCu$umCu, inchCu$yardCu, kmCu$cmCu, kmCu$damCu, kmCu$dmCu, kmCu$footCu, kmCu$hmCu, kmCu$inchCu, kmCu$mCu, kmCu$mileCu, kmCu$mmCu, kmCu$nmCu, kmCu$umCu, kmCu$yardCu, l$cup, l$gal, l$ml, l$pt, l$qt, l$tbl, l$tea, mCu$cmCu, mCu$damCu, mCu$dmCu, mCu$footCu, mCu$hmCu, mCu$inchCu, mCu$kmCu, mCu$mileCu, mCu$mmCu, mCu$nmCu, mCu$umCu, mCu$yardCu, mileCu$cmCu, mileCu$damCu, mileCu$dmCu, mileCu$footCu, mileCu$hmCu, mileCu$inchCu, mileCu$kmCu, mileCu$mCu, mileCu$mmCu, mileCu$nmCu, mileCu$umCu, mileCu$yardCu, ml$cup, ml$gal, ml$l, ml$pt, ml$qt, ml$tbl, ml$tea, mmCu$cmCu, mmCu$damCu, mmCu$dmCu, mmCu$footCu, mmCu$hmCu, mmCu$inchCu, mmCu$kmCu, mmCu$mCu, mmCu$mileCu, mmCu$nmCu, mmCu$umCu, mmCu$yardCu, nmCu$cmCu, nmCu$damCu, nmCu$dmCu, nmCu$footCu, nmCu$hmCu, nmCu$inchCu, nmCu$kmCu, nmCu$mCu, nmCu$mileCu, nmCu$mmCu, nmCu$umCu, nmCu$yardCu, pt$cup, pt$gal, pt$l, pt$ml, pt$qt, pt$tbl, pt$tea, qt$cup, qt$gal, qt$l, qt$ml, qt$pt, qt$tbl, qt$tea, tbl$cup, tbl$gal, tbl$l, tbl$ml, tbl$pt, tbl$qt, tbl$tea, tea$cup, tea$gal, tea$l, tea$ml, tea$pt, tea$qt, tea$tbl, umCu$cmCu, umCu$damCu, umCu$dmCu, umCu$footCu, umCu$hmCu, umCu$inchCu, umCu$kmCu, umCu$mCu, umCu$mileCu, umCu$mmCu, umCu$nmCu, umCu$yardCu, yardCu$cmCu, yardCu$damCu, yardCu$dmCu, yardCu$footCu, yardCu$hmCu, yardCu$inchCu, yardCu$kmCu, yardCu$mCu, yardCu$mileCu, yardCu$mmCu, yardCu$nmCu, yardCu$umCu;

convertVolume = {
  milliliter: {},
  liter: {},
  teaspoon: {},
  tablespoon: {},
  cup: {},
  pint: {},
  quart: {},
  gallon: {},
  nanometerCu: {},
  micrometerCu: {},
  millimeterCu: {},
  centimeterCu: {},
  decimeterCu: {},
  meterCu: {},
  decameterCu: {},
  hectometerCu: {},
  kilometerCu: {},
  inchCu: {},
  footCu: {},
  yardCu: {},
  mileCu: {}
};

/* Milliliter Conversions */
convertVolume.milliliter.liter = ml$l = function(ml) {
  return ml / 1000; // Milliliter to Liter
};

convertVolume.milliliter.teaspoon = ml$tea = function(ml) {
  return ml / 5.919; // Milliliter to Teaspoon
};

convertVolume.milliliter.tablespoon = ml$tbl = function(ml) {
  return ml / 17.758; // Milliliter to Tablespoon
};

convertVolume.milliliter.cup = ml$cup = function(ml) {
  return ml / 284.1; // Milliliter to Cup
};

convertVolume.milliliter.pint = ml$pt = function(ml) {
  return ml / 568.3; // Milliliter to Pint
};

convertVolume.milliliter.quart = ml$qt = function(ml) {
  return ml / 1137; // Milliliter to Quart
};

convertVolume.milliliter.gallon = ml$gal = function(ml) {
  return ml / 4546; // Milliliter to Gallon
};

/* Liter Conversions */
convertVolume.liter.milliliter = l$ml = function(l) {
  return l * 1000; // Liter to Milliliter
};

convertVolume.liter.teaspoon = l$tea = function(l) {
  return l * 168.9; // Liter to Teaspoon
};

convertVolume.liter.tablespoon = l$tbl = function(l) {
  return l * 56.312; // Liter to Tablespoon
};

convertVolume.liter.cup = l$cup = function(l) {
  return l * 3.52; // Liter to Cup
};

convertVolume.liter.pint = l$pt = function(l) {
  return l * 1.76; // Liter to Pint
};

convertVolume.liter.quart = l$qt = function(l) {
  return l / 1.137; // Liter to Quart
};

convertVolume.liter.gallon = l$gal = function(l) {
  return l / 4.546; // Liter to Gallon
};

/* Teaspoon Conversions */
convertVolume.teaspoon.milliliter = tea$ml = function(tea) {
  return tea * 5.919; // Teaspoon to Milliliter
};

convertVolume.teaspoon.liter = tea$l = function(tea) {
  return tea / 168.9; // Teaspoon to Liter
};

convertVolume.teaspoon.tablespoon = tea$tbl = function(tea) {
  return tea / 3; // Teaspoon to Tablespoon
};

convertVolume.teaspoon.cup = tea$cup = function(tea) {
  return tea / 48; // Teaspoon to Cup
};

convertVolume.teaspoon.pint = tea$pt = function(tea) {
  return tea / 96; // Teaspoon to Pint
};

convertVolume.teaspoon.quart = tea$qt = function(tea) {
  return tea / 192; // Teaspoon to Quart
};

convertVolume.teaspoon.gallon = tea$gal = function(tea) {
  return tea / 768; // Teaspoon to Gallon
};

/* Tablespoon Conversions */
convertVolume.tablespoon.milliliter = tbl$ml = function(tbl) {
  return tbl * 17.758; // Tablespoon to Milliliter
};

convertVolume.tablespoon.liter = tbl$l = function(tbl) {
  return tbl / 56.312; // Tablespoon to Liter
};

convertVolume.tablespoon.teaspoon = tbl$tea = function(tbl) {
  return tbl * 3; // Tablespoon to Teaspoon
};

convertVolume.tablespoon.cup = tbl$cup = function(tbl) {
  return tbl / 16; // Tablespoon to Cup
};

convertVolume.tablespoon.pint = tbl$pt = function(tbl) {
  return tbl / 32; // Tablespoon to Pint
};

convertVolume.tablespoon.quart = tbl$qt = function(tbl) {
  return tbl / 64; // Tablespoon to Quart
};

convertVolume.tablespoon.gallon = tbl$gal = function(tbl) {
  return tbl / 256; // Tablespoon to Gallon
};

/* Cup Conversions */
convertVolume.cup.milliliter = cup$ml = function(cup) {
  return cup * 284.1; // Cup to Milliliter
};

convertVolume.cup.liter = cup$l = function(cup) {
  return cup / 3.52; // Cup to Liter
};

convertVolume.cup.teaspoon = cup$tea = function(cup) {
  return cup * 48; // Cup to Teaspoon
};

convertVolume.cup.tablespoon = cup$tbl = function(cup) {
  return cup * 16; // Cup to Tablespoon
};

convertVolume.cup.pint = cup$pt = function(cup) {
  return cup / 2; // Cup to Pint
};

convertVolume.cup.quart = cup$qt = function(cup) {
  return cup / 4; // Cup to Quart
};

convertVolume.cup.gallon = cup$gal = function(cup) {
  return cup / 16; // Cup to Gallon
};

/* Pint Conversions */
convertVolume.pint.milliliter = pt$ml = function(pt) {
  return pt * 568.3; // Pint to Milliliter
};

convertVolume.pint.liter = pt$l = function(pt) {
  return pt / 1.76; // Pint to Liter
};

convertVolume.pint.teaspoon = pt$tea = function(pt) {
  return pt * 96; // Pint to Teaspoon
};

convertVolume.pint.tablespoon = pt$tbl = function(pt) {
  return pt * 32; // Pint to Tablespoon
};

convertVolume.pint.cup = pt$cup = function(pt) {
  return pt * 2; // Pint to Cup
};

convertVolume.pint.quart = pt$qt = function(pt) {
  return pt / 2; // Pint to Quart
};

convertVolume.pint.gallon = pt$gal = function(pt) {
  return pt / 8; // Pint to Gallon
};

/* Quart Conversions */
convertVolume.quart.milliliter = qt$ml = function(qt) {
  return qt * 1137; // Quart to Milliliter
};

convertVolume.quart.liter = qt$l = function(qt) {
  return qt * 1.137; // Quart to Liter
};

convertVolume.quart.teaspoon = qt$tea = function(qt) {
  return qt * 192; // Quart to Teaspoon
};

convertVolume.quart.tablespoon = qt$tbl = function(qt) {
  return qt * 64; // Quart to Tablespoon
};

convertVolume.quart.cup = qt$cup = function(qt) {
  return qt * 4; // Quart to Cup
};

convertVolume.quart.pint = qt$pt = function(qt) {
  return qt * 2; // Quart to Pint
};

convertVolume.quart.gallon = qt$gal = function(qt) {
  return qt / 4; // Quart to Gallon
};

/* Gallon Conversions */
convertVolume.gallon.milliliter = gal$ml = function(gal) {
  return gal * 4546; // Gallon to Milliliter
};

convertVolume.gallon.liter = gal$l = function(gal) {
  return gal * 4.546; // Gallon to Liter
};

convertVolume.gallon.teaspoon = gal$tea = function(gal) {
  return gal * 768; // Gallon to Teaspoon
};

convertVolume.gallon.tablespoon = gal$tbl = function(gal) {
  return gal * 256; // Gallon to Tablespoon
};

convertVolume.gallon.cup = gal$cup = function(gal) {
  return gal * 16; // Gallon to Cup
};

convertVolume.gallon.pint = gal$pt = function(gal) {
  return gal * 8; // Gallon to Pint
};

convertVolume.gallon.quart = gal$qt = function(gal) {
  return gal * 4; // Gallon to Quart
};

/* Nanometer Cubed Conversions */
convertVolume.nanometerCu.micrometerCu = nmCu$umCu = function(nmCu) {
  return nmCu / 1e+9; // Nanometer Cubed to Micrometer Cubed
};

convertVolume.nanometerCu.millimeterCu = nmCu$mmCu = function(nmCu) {
  return nmCu / 1e+18; // Nanometer Cubed to Millimeter Cubed
};

convertVolume.nanometerCu.centimeterCu = nmCu$cmCu = function(nmCu) {
  return nmCu / 1e+21; // Nanometer Cubed to Centimeter Cubed
};

convertVolume.nanometerCu.decimeterCu = nmCu$dmCu = function(nmCu) {
  return nmCu / 1e+24; // Nanometer Cubed to Decimeter Cubed
};

convertVolume.nanometerCu.meterCu = nmCu$mCu = function(nmCu) {
  return nmCu / 1e+27; // Nanometer Cubed to Meter Cubed
};

convertVolume.nanometerCu.decameterCu = nmCu$damCu = function(nmCu) {
  return nmCu / 1e+30; // Nanometer Cubed to Decameter Cubed
};

convertVolume.nanometerCu.hectometerCu = nmCu$hmCu = function(nmCu) {
  return nmCu / 1e+33; // Nanometer Cubed to Hectometer Cubed
};

convertVolume.nanometerCu.kilometerCu = nmCu$kmCu = function(nmCu) {
  return nmCu / 1e+36; // Nanometer Cubed to Kilometer Cubed
};

convertVolume.nanometerCu.inchCu = nmCu$inchCu = function(nmCu) {
  return nmCu / 16387e+18; // Nanometer Cubed to Inch Cubed
};

convertVolume.nanometerCu.footCu = nmCu$footCu = function(nmCu) {
  return nmCu / 28317e+21; // Nanometer Cubed to Foot Cubed
};

convertVolume.nanometerCu.yardCu = nmCu$yardCu = function(nmCu) {
  return nmCu / 7646e+23; // Nanometer Cubed to Yard Cubed
};

convertVolume.nanometerCu.mileCu = nmCu$mileCu = function(nmCu) {
  return nmCu / 4168e+33; // Nanometer Cubed to Mile Cubed
};

/* Micrometer Cubed Conversions */
convertVolume.micrometerCu.nanometerCu = umCu$nmCu = function(umCu) {
  return umCu * 1e+9; // Micrometer Cubed to Nanometer Cubed
};

convertVolume.micrometerCu.millimeterCu = umCu$mmCu = function(umCu) {
  return umCu / 1e+9; // Micrometer Cubed to Millimeter Cubed
};

convertVolume.micrometerCu.centimeterCu = umCu$cmCu = function(umCu) {
  return umCu / 1e+12; // Micrometer Cubed to Centimeter Cubed
};

convertVolume.micrometerCu.decimeterCu = umCu$dmCu = function(umCu) {
  return umCu / 1e+15; // Micrometer Cubed to Decimeter Cubed
};

convertVolume.micrometerCu.meterCu = umCu$mCu = function(umCu) {
  return umCu / 1e+18; // Micrometer Cubed to Meter Cubed
};

convertVolume.micrometerCu.decameterCu = umCu$damCu = function(umCu) {
  return umCu / 1e+21; // Micrometer Cubed to Decameter Cubed
};

convertVolume.micrometerCu.hectometerCu = umCu$hmCu = function(umCu) {
  return umCu / 1e+24; // Micrometer Cubed to Hectometer Cubed
};

convertVolume.micrometerCu.kilometerCu = umCu$kmCu = function(umCu) {
  return umCu / 1e+27; // Micrometer Cubed to Kilometer Cubed
};

convertVolume.micrometerCu.inchCu = umCu$inchCu = function(umCu) {
  return umCu / 16387e+9; // Micrometer Cubed to Inch Cubed
};

convertVolume.micrometerCu.footCu = umCu$footCu = function(umCu) {
  return umCu / 28317e+12; // Micrometer Cubed to Foot Cubed
};

convertVolume.micrometerCu.yardCu = umCu$yardCu = function(umCu) {
  return umCu / 7646e+14; // Micrometer Cubed to Yard Cubed
};

convertVolume.micrometerCu.mileCu = umCu$mileCu = function(umCu) {
  return umCu / 4168e+24; // Micrometer Cubed to Mile Cubed
};

/* Millimeter Cubed Conversions */
convertVolume.millimeterCu.nanometerCu = mmCu$nmCu = function(mmCu) {
  return mmCu * 1e+18; // Millimeter Cubed to Nanometer Cubed
};

convertVolume.millimeterCu.micrometerCu = mmCu$umCu = function(mmCu) {
  return mmCu * 1e+9; // Millimeter Cubed to Micrometer Cubed
};

convertVolume.millimeterCu.centimeterCu = mmCu$cmCu = function(mmCu) {
  return mmCu / 1e+3; // Millimeter to Cubed Centimeter Cubed
};

convertVolume.millimeterCu.decimeterCu = mmCu$dmCu = function(mmCu) {
  return mmCu / 1e+6; // Millimeter Cubed to Decimeter Cubed
};

convertVolume.millimeterCu.meterCu = mmCu$mCu = function(mmCu) {
  return mmCu / 1e+9; // Millimeter Cubed to Meter Cubed
};

convertVolume.millimeterCu.decameterCu = mmCu$damCu = function(mmCu) {
  return mmCu / 1e+12; // Millimeter Cubed to Decameter Cubed
};

convertVolume.millimeterCu.hectometerCu = mmCu$hmCu = function(mmCu) {
  return mmCu / 1e+15; // Millimeter Cubed to Hectometer Cubed
};

convertVolume.millimeterCu.kilometerCu = mmCu$kmCu = function(mmCu) {
  return mmCu / 1e+18; // Millimeter Cubed to Kilometer Cubed
};

convertVolume.millimeterCu.inchCu = mmCu$inchCu = function(mmCu) {
  return mmCu / 16387; // Millimeter Cubed to Inch Cubed
};

convertVolume.millimeterCu.footCu = mmCu$footCu = function(mmCu) {
  return mmCu / 28317e+3; // Millimeter Cubed to Foot Cubed
};

convertVolume.millimeterCu.yardCu = mmCu$yardCu = function(mmCu) {
  return mmCu / 7646e+5; // Millimeter Cubed to Yard Cubed
};

convertVolume.millimeterCu.mileCu = mmCu$mileCu = function(mmCu) {
  return mmCu / 4168e+15; // Millimeter Cubed to Mile Cubed
};

/* Centimeter Cubed Conversions */
convertVolume.centimeterCu.nanometerCu = cmCu$nmCu = function(cmCu) {
  return cmCu * 1e+21; // Centimeter Cubed to Nanometer Cubed
};

convertVolume.centimeterCu.micrometerCu = cmCu$umCu = function(cmCu) {
  return cmCu * 1e+12; // Centimeter Cubed to Micrometer Cubed
};

convertVolume.centimeterCu.millimeterCu = cmCu$mmCu = function(cmCu) {
  return cmCu * 1e+3; // Centimeter Cubed to Millimeter Cubed
};

convertVolume.centimeterCu.decimeterCu = cmCu$dmCu = function(cmCu) {
  return cmCu / 1e+3; // Centimeter Cubed to Decimeter Cubed
};

convertVolume.centimeterCu.meterCu = cmCu$mCu = function(cmCu) {
  return cmCu / 1e+6; // Centimeter Cubed to Meter Cubed
};

convertVolume.centimeterCu.decameterCu = cmCu$damCu = function(cmCu) {
  return cmCu / 1e+9; // Centimeter Cubed to Decameter Cubed
};

convertVolume.centimeterCu.hectometerCu = cmCu$hmCu = function(cmCu) {
  return cmCu / 1e+12; // Centimeter Cubed to Hectometer Cubed
};

convertVolume.centimeterCu.kilometerCu = cmCu$kmCu = function(cmCu) {
  return cmCu / 1e+15; // Centimeter Cubed to Kilometer Cubed
};

convertVolume.centimeterCu.inchCu = cmCu$inchCu = function(cmCu) {
  return cmCu / 16.387; // Centimeter Cubed to Inch Cubed
};

convertVolume.centimeterCu.footCu = cmCu$footCu = function(cmCu) {
  return cmCu / 28317; // Centimeter Cubed to Foot Cubed
};

convertVolume.centimeterCu.yardCu = cmCu$yardCu = function(cmCu) {
  return cmCu / 7646e+2; // Centimeter Cubed to Yard Cubed
};

convertVolume.centimeterCu.mileCu = cmCu$mileCu = function(cmCu) {
  return cmCu / 4168e+12; // Centimeter Cubed to Mile Cubed
};

/* Decimeter Cubed Conversions */
convertVolume.decimeterCu.nanometerCu = dmCu$nmCu = function(dmCu) {
  return dmCu * 1e+24; // Decimeter Cubed to Nanometer Cubed
};

convertVolume.decimeterCu.micrometerCu = dmCu$umCu = function(dmCu) {
  return dmCu * 1e+15; // Decimeter Cubed to Micrometer Cubed
};

convertVolume.decimeterCu.millimeterCu = dmCu$mmCu = function(dmCu) {
  return dmCu * 1e+6; // Decimeter Cubed to Millimeter Cubed
};

convertVolume.decimeterCu.centimeterCu = dmCu$cmCu = function(dmCu) {
  return dmCu * 1e+3; // Decimeter Cubed to Centimeter Cubed
};

convertVolume.decimeterCu.meterCu = dmCu$mCu = function(dmCu) {
  return dmCu / 1e+3; // Decimeter Cubed to Meter Cubed
};

convertVolume.decimeterCu.decameterCu = dmCu$damCu = function(dmCu) {
  return dmCu / 1e+6; // Decimeter Cubed to Decameter Cubed
};

convertVolume.decimeterCu.hectometerCu = dmCu$hmCu = function(dmCu) {
  return dmCu / 1e+9; // Decimeter Cubed to Hectometer Cubed
};

convertVolume.decimeterCu.kilometerCu = dmCu$kmCu = function(dmCu) {
  return dmCu / 1e+12; // Decimeter Cubed to Kilometer Cubed
};

convertVolume.decimeterCu.inchCu = dmCu$inchCu = function(dmCu) {
  return dmCu * 61.024; // Decimeter Cubed to Inch Cubed
};

convertVolume.decimeterCu.footCu = dmCu$footCu = function(dmCu) {
  return dmCu / 28.317; // Decimeter Cubed to Foot Cubed
};

convertVolume.decimeterCu.yardCu = dmCu$yardCu = function(dmCu) {
  return dmCu / 764.6; // Decimeter Cubed to Yard Cubed
};

convertVolume.decimeterCu.mileCu = dmCu$mileCu = function(dmCu) {
  return dmCu / 4168e+9; // Decimeter Cubed to Mile Cubed
};

/* Meter Cubed Conversions */
convertVolume.meterCu.nanometerCu = mCu$nmCu = function(mCu) {
  return mCu * 1e+27; // Meter Cubed to Nanometer Cubed
};

convertVolume.meterCu.micrometerCu = mCu$umCu = function(mCu) {
  return mCu * 1e+18; // Meter Cubed to Micrometer Cubed
};

convertVolume.meterCu.millimeterCu = mCu$mmCu = function(mCu) {
  return mCu * 1e+9; // Meter Cubed to Millimeter Cubed
};

convertVolume.meterCu.centimeterCu = mCu$cmCu = function(mCu) {
  return mCu * 1e+6; // Meter Cubed to Centimeter Cubed
};

convertVolume.meterCu.decimeterCu = mCu$dmCu = function(mCu) {
  return mCu * 1e+3; // Meter Cubed to Decimeter Cubed
};

convertVolume.meterCu.decameterCu = mCu$damCu = function(mCu) {
  return mCu / 1e+3; // Meter Cubed to Decameter Cubed
};

convertVolume.meterCu.hectometerCu = mCu$hmCu = function(mCu) {
  return mCu / 1e+6; // Meter Cubed to Hectometer Cubed
};

convertVolume.meterCu.kilometerCu = mCu$kmCu = function(mCu) {
  return mCu / 1e+9; // Meter Cubed to Kilometer Cubed
};

convertVolume.meterCu.inchCu = mCu$inchCu = function(mCu) {
  return mCu * 61024; // Meter Cubed to Inch Cubed
};

convertVolume.meterCu.footCu = mCu$footCu = function(mCu) {
  return mCu * 35.315; // Meter Cubed to Foot Cubed
};

convertVolume.meterCu.yardCu = mCu$yardCu = function(mCu) {
  return mCu * 1.308; // Meter Cubed to Yard Cubed
};

convertVolume.meterCu.mileCu = mCu$mileCu = function(mCu) {
  return mCu / 4168e+6; // Meter Cubed to Mile Cubed
};

/* Decameter Cubed Conversions */
convertVolume.decameterCu.nanometerCu = damCu$nmCu = function(damCu) {
  return damCu * 1e+30; // Decameter Cubed to Nanometer Cubed
};

convertVolume.decameterCu.micrometerCu = damCu$umCu = function(damCu) {
  return damCu * 1e+21; // Decameter Cubed to Micrometer Cubed
};

convertVolume.decameterCu.millimeterCu = damCu$mmCu = function(damCu) {
  return damCu * 1e+12; // Decameter Cubed to Millimeter Cubed
};

convertVolume.decameterCu.centimeterCu = damCu$cmCu = function(damCu) {
  return damCu * 1e+9; // Decameter Cubed to Centimeter Cubed
};

convertVolume.decameterCu.decimeterCu = damCu$dmCu = function(damCu) {
  return damCu * 1e+6; // Decameter Cubed to Decimeter Cubed
};

convertVolume.decameterCu.meterCu = damCu$mCu = function(damCu) {
  return damCu * 1e+3; // Decameter Cubed to Meter Cubed
};

convertVolume.decameterCu.hectometerCu = damCu$hmCu = function(damCu) {
  return damCu / 1e+3; // Decameter Cubed to Hectometer Cubed
};

convertVolume.decameterCu.kilometerCu = damCu$kmCu = function(damCu) {
  return damCu / 1e+6; // Decameter Cubed to Kilometer Cubed
};

convertVolume.decameterCu.inchCu = damCu$inchCu = function(damCu) {
  return damCu * 61024e+3; // Decameter Cubed to Inch Cubed
};

convertVolume.decameterCu.footCu = damCu$footCu = function(damCu) {
  return damCu * 35315; // Decameter Cubed to Foot Cubed
};

convertVolume.decameterCu.yardCu = damCu$yardCu = function(damCu) {
  return damCu * 1308; // Decameter Cubed to Yard Cubed
};

convertVolume.decameterCu.mileCu = damCu$mileCu = function(damCu) {
  return damCu / 4168e+3; // Decameter Cubed to Mile Cubed
};

/* Hectometer Cubed Conversions */
convertVolume.hectometerCu.nanometerCu = hmCu$nmCu = function(hmCu) {
  return hmCu * 1e+33; // Hectometer Cubed to Nanometer Cubed
};

convertVolume.hectometerCu.micrometerCu = hmCu$umCu = function(hmCu) {
  return hmCu * 1e+24; // Hectometer Cubed to Micrometer Cubed
};

convertVolume.hectometerCu.millimeterCu = hmCu$mmCu = function(hmCu) {
  return hmCu * 1e+15; // Hectometer Cubed to Millimeter Cubed
};

convertVolume.hectometerCu.centimeterCu = hmCu$cmCu = function(hmCu) {
  return hmCu * 1e+12; // Hectometer Cubed to Centimeter Cubed
};

convertVolume.hectometerCu.decimeterCu = hmCu$dmCu = function(hmCu) {
  return hmCu * 1e+9; // Hectometer Cubed to Decimeter Cubed
};

convertVolume.hectometerCu.meterCu = hmCu$mCu = function(hmCu) {
  return hmCu * 1e+6; // Hectometer Cubed to Meter Cubed
};

convertVolume.hectometerCu.decameterCu = hmCu$damCu = function(hmCu) {
  return hmCu * 1e+3; // Hectometer Cubed to Decameter Cubed
};

convertVolume.hectometerCu.kilometerCu = hmCu$kmCu = function(hmCu) {
  return hmCu / 1e+3; // Hectometer Cubed to Kilometer Cubed
};

convertVolume.hectometerCu.inchCu = hmCu$inchCu = function(hmCu) {
  return hmCu * 61024e+6; // Hectometer Cubed to Inch Cubed
};

convertVolume.hectometerCu.footCu = hmCu$footCu = function(hmCu) {
  return hmCu * 35315e+3; // Hectometer Cubed to Foot Cubed
};

convertVolume.hectometerCu.yardCu = hmCu$yardCu = function(hmCu) {
  return hmCu * 1308e+3; // Hectometer Cubed to Yard Cubed
};

convertVolume.hectometerCu.mileCu = hmCu$mileCu = function(hmCu) {
  return hmCu / 4168; // Hectometer Cubed to Mile Cubed
};

/* Kilometer Cubed Conversions */
convertVolume.kilometerCu.nanometerCu = kmCu$nmCu = function(kmCu) {
  return kmCu * 1e+36; // Kilometer Cubed to Nanometer Cubed
};

convertVolume.kilometerCu.micrometerCu = kmCu$umCu = function(kmCu) {
  return kmCu * 1e+27; // Kilometer Cubed to Micrometer Cubed
};

convertVolume.kilometerCu.millimeterCu = kmCu$mmCu = function(kmCu) {
  return kmCu * 1e+18; // Kilometer Cubed to Millimeter Cubed
};

convertVolume.kilometerCu.centimeterCu = kmCu$cmCu = function(kmCu) {
  return kmCu * 1e+15; // Kilometer Cubed to Centimeter Cubed
};

convertVolume.kilometerCu.decimeterCu = kmCu$dmCu = function(kmCu) {
  return kmCu * 1e+12; // Kilometer Cubed to Decimeter Cubed
};

convertVolume.kilometerCu.meterCu = kmCu$mCu = function(kmCu) {
  return kmCu * 1e+9; // Kilometer Cubed to Meter Cubed
};

convertVolume.kilometerCu.decameterCu = kmCu$damCu = function(kmCu) {
  return kmCu * 1e+6; // Kilometer Cubed to Decameter Cubed
};

convertVolume.kilometerCu.hectometerCu = kmCu$hmCu = function(kmCu) {
  return kmCu * 1e+3; // Kilometer Cubed to Hectometer Cubed
};

convertVolume.kilometerCu.inchCu = kmCu$inchCu = function(kmCu) {
  return kmCu * 61024e+9; // Kilometer Cubed to Inch Cubed
};

convertVolume.kilometerCu.footCu = kmCu$footCu = function(kmCu) {
  return kmCu * 35315e+6; // Kilometer Cubed to Foot Cubed
};

convertVolume.kilometerCu.yardCu = kmCu$yardCu = function(kmCu) {
  return kmCu * 1308e+6; // Kilometer Cubed to Yard Cubed
};

convertVolume.kilometerCu.mileCu = kmCu$mileCu = function(kmCu) {
  return kmCu / 4.168; // Kilometer Cubed to Mile Cubed
};

/* Inch Cubed Conversions */
convertVolume.inchCu.nanometerCu = inchCu$nmCu = function(inchCu) {
  return inchCu * 1.6387e+18; // Inch Cubed to Nanometer Cubed
};

convertVolume.inchCu.micrometerCu = inchCu$umCu = function(inchCu) {
  return inchCu * 16387e+9; // Inch Cubed to Micrometer Cubed
};

convertVolume.inchCu.millimeterCu = inchCu$mmCu = function(inchCu) {
  return inchCu * 16387; // Inch Cubed to Millimeter Cubed
};

convertVolume.inchCu.centimeterCu = inchCu$cmCu = function(inchCu) {
  return inchCu * 16.387; // Inch Cubed to Centimeter Cubed
};

convertVolume.inchCu.decimeterCu = inchCu$dmCu = function(inchCu) {
  return inchCu / 61.024; // Inch Cubed to Decimeter Cubed
};

convertVolume.inchCu.meterCu = inchCu$mCu = function(inchCu) {
  return inchCu / 61024; // Inch Cubed to Meter Cubed
};

convertVolume.inchCu.decameterCu = inchCu$damCu = function(inchCu) {
  return inchCu / 61024e+3; // Inch Cubed to Decameter Cubed
};

convertVolume.inchCu.hectometerCu = inchCu$hmCu = function(inchCu) {
  return inchCu / 61024e+6; // Inch Cubed to Hectometer Cubed
};

convertVolume.inchCu.kilometerCu = inchCu$kmCu = function(inchCu) {
  return inchCu / 61024e+9; // Inch Cubed to Kilometer Cubed
};

convertVolume.inchCu.footCu = inchCu$footCu = function(inchCu) {
  return inchCu / 1728; // Inch Cubed to Foot Cubed
};

convertVolume.inchCu.yardCu = inchCu$yardCu = function(inchCu) {
  return inchCu / 4666e+1; // Inch Cubed to Yard Cubed
};

convertVolume.inchCu.mileCu = inchCu$mileCu = function(inchCu) {
  return inchCu / 2544e+11; // Inch Cubed to Mile Cubed
};

/* Foot Cubed Conversions */
convertVolume.footCu.nanometerCu = footCu$nmCu = function(footCu) {
  return footCu * 28317e+21; // Foot Cubed to Nanometer Cubed
};

convertVolume.footCu.micrometerCu = footCu$umCu = function(footCu) {
  return footCu * 28317e+12; // Foot Cubed to Micrometer Cubed
};

convertVolume.footCu.millimeterCu = footCu$mmCu = function(footCu) {
  return footCu * 28317e+3; // Foot Cubed to Millimeter Cubed
};

convertVolume.footCu.centimeterCu = footCu$cmCu = function(footCu) {
  return footCu * 28317; // Foot Cubed to Centimeter Cubed
};

convertVolume.footCu.decimeterCu = footCu$dmCu = function(footCu) {
  return footCu * 28.317; // Foot Cubed to Decimeter Cubed
};

convertVolume.footCu.meterCu = footCu$mCu = function(footCu) {
  return footCu / 35.315; // Foot Cubed to Meter Cubed
};

convertVolume.footCu.decameterCu = footCu$damCu = function(footCu) {
  return footCu / 35315; // Foot Cubed to Decameter Cubed
};

convertVolume.footCu.hectometerCu = footCu$hmCu = function(footCu) {
  return footCu / 35315e+3; // Foot Cubed to Hectometer Cubed
};

convertVolume.footCu.kilometerCu = footCu$kmCu = function(footCu) {
  return footCu / 35315e+6; // Foot Cubed to Kilometer Cubed
};

convertVolume.footCu.inchCu = footCu$inchCu = function(footCu) {
  return footCu * 1728; // Foot Cubed to Inch Cubed
};

convertVolume.footCu.yardCu = footCu$yardCu = function(footCu) {
  return footCu / 27; // Foot Cubed to Yard Cubed
};

convertVolume.footCu.mileCu = footCu$mileCu = function(footCu) {
  return footCu / 1472e+8; // Foot Cubed to Mile Cubed
};

/* Yard Cubed Conversions */
convertVolume.yardCu.nanometerCu = yardCu$nmCu = function(yardCu) {
  return yardCu * 7646e+23; // Yard Cubed to Nanometer Cubed
};

convertVolume.yardCu.micrometerCu = yardCu$umCu = function(yardCu) {
  return yardCu * 7646e+14; // Yard Cubed to Micrometer Cubed
};

convertVolume.yardCu.millimeterCu = yardCu$mmCu = function(yardCu) {
  return yardCu * 7646e+5; // Yard Cubed to Millimeter Cubed
};

convertVolume.yardCu.centimeterCu = yardCu$cmCu = function(yardCu) {
  return yardCu * 7646e+2; // Yard Cubed to Centimeter Cubed
};

convertVolume.yardCu.decimeterCu = yardCu$dmCu = function(yardCu) {
  return yardCu * 764.6; // Yard Cubed to Decimeter Cubed
};

convertVolume.yardCu.meterCu = yardCu$mCu = function(yardCu) {
  return yardCu / 1.308; // Yard Cubed to Meter Cubed
};

convertVolume.yardCu.decameterCu = yardCu$damCu = function(yardCu) {
  return yardCu / 1308; // Yard Cubed to Decameter Cubed
};

convertVolume.yardCu.hectometerCu = yardCu$hmCu = function(yardCu) {
  return yardCu / 1308e+3; // Yard Cubed to Hectometer Cubed
};

convertVolume.yardCu.kilometerCu = yardCu$kmCu = function(yardCu) {
  return yardCu / 1308e+6; // Yard Cubed to Kilometer Cubed
};

convertVolume.yardCu.inchCu = yardCu$inchCu = function(yardCu) {
  return yardCu * 4666e+1; // Yard Cubed to Inch Cubed
};

convertVolume.yardCu.footCu = yardCu$footCu = function(yardCu) {
  return yardCu * 27; // Yard Cubed to Foot Cubed
};

convertVolume.yardCu.mileCu = yardCu$mileCu = function(yardCu) {
  return yardCu / 5452e+6; // Yard Cubed to Mile Cubed
};

/* Mile Cubed Conversions */
convertVolume.mileCu.nanometerCu = mileCu$nmCu = function(mileCu) {
  return mileCu * 4.168e+33; // Mile Cubed to Nanometer Cubed
};

convertVolume.mileCu.micrometerCu = mileCu$umCu = function(mileCu) {
  return mileCu * 4.168e+24; // Mile Cubed to Micrometer Cubed
};

convertVolume.mileCu.millimeterCu = mileCu$mmCu = function(mileCu) {
  return mileCu * 4.168e+15; // Mile Cubed to Millimeter Cubed
};

convertVolume.mileCu.centimeterCu = mileCu$cmCu = function(mileCu) {
  return mileCu * 4.168e+12; // Mile Cubed to Centimeter Cubed
};

convertVolume.mileCu.decimeterCu = mileCu$dmCu = function(mileCu) {
  return mileCu * 4.168e+9; // Mile Cubed to Decimeter Cubed
};

convertVolume.mileCu.meterCu = mileCu$mCu = function(mileCu) {
  return mileCu * 4168e+6; // Mile Cubed to Meter Cubed
};

convertVolume.mileCu.decameterCu = mileCu$damCu = function(mileCu) {
  return mileCu * 4168e+3; // Mile Cubed to Decameter Cubed
};

convertVolume.mileCu.hectometerCu = mileCu$hmCu = function(mileCu) {
  return mileCu * 4168; // Mile Cubed to Hectometer Cubed
};

convertVolume.mileCu.kilometerCu = mileCu$kmCu = function(mileCu) {
  return mileCu * 4.168; // Mile Cubed to Kilometer Cubed
};

convertVolume.mileCu.inchCu = mileCu$inchCu = function(mileCu) {
  return mileCu * 2544e+11; // Mile Cubed to Inch Cubed
};

convertVolume.mileCu.footCu = mileCu$footCu = function(mileCu) {
  return mileCu * 1472e+8; // Mile Cubed to Foot Cubed
};

convertVolume.mileCu.yardCu = mileCu$yardCu = function(mileCu) {
  return mileCu * 5452e+6; // Mile Cubed to Yard Cubed
};